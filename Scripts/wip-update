#!/bin/sh -e

<<<<<<< HEAD
case $(uname) in
FreeBSD)
    : ${PORTSDIR:=/usr/ports}
    ;;

DragonFly)
    : ${PORTSDIR:=/usr/dports}
    ;;

*)
    printf "$0: Not supported on $(uname).\n"
    exit 1
    ;;

esac
=======
if [ -z $PORTSDIR ]; then
    if [ $(uname) = DragonFly ]; then
	PORTSDIR=/usr/dports
    elif [ $(uname) = FreeBSD ]; then
	PORTSDIR=/usr/ports
    else
	printf "$0: Not supported on $(uname).\n"
	exit 1
    fi
fi
>>>>>>> 64730d0b544b5edc23dff8c3c69d9e96a855d088

wip_ports_dir=$PORTSDIR/wip

# wip-poudriere-test needs access from non-root account
umask 022

if [ ! -e $wip_ports_dir ]; then
    printf "No $wip_ports_dir directory.  Aborting...\n"
    exit 1
else
    cd $wip_ports_dir
    
    if [ -e .svn ]; then
	if svn st | awk '{ print $1 }' | grep '^M'; then
	    printf 'Modified files may cause conflicts when updating:\n'
	    svn st
	    read -p 'Update anyway? y/[n] ' update
	    if [ 0$update != 0y ]; then
		exit
	    fi
	fi
    elif [ -e .git ]; then
	if git status | awk '{ print $1 }' | grep '^modified'; then
	    printf 'Modified files may cause conflicts when updating:\n'
	    git status
	    read -p 'Update anyway? y/[n] ' update
	    if [ 0$update != 0y ]; then
		exit
	    fi
	fi
    fi
    
    # Temporary replacement for clean-all during transition
    printf "Cleaning...\n"
    cd $wip_ports_dir
    for dir in *; do
	if [ -d $dir/work ]; then
	    cd $dir
	    pwd
	    make clean
	    cd ..
	fi
    done
    
    find . -name '.*.bak' -exec rm '{}' \;

    if [ -e .svn ]; then
	svnlite up
    elif [ -e .git ]; then
	git pull
    else
	printf "This is neither a subversion nor a git repository.\n"
	exit 1
    fi
fi

if ! fgrep 'USE_LOCAL_MK=yes' /etc/make.conf > /dev/null; then
    cat << EOM >> /etc/make.conf

# Added by freebsd-wip-checkout
USE_LOCAL_MK=yes
# End addition

EOM
fi

if ! fgrep 'VALID_CATEGORIES+=wip' $PORTSDIR/Mk/bsd.local.mk > /dev/null; then
    cat << EOM >> $PORTSDIR/Mk/bsd.local.mk

# Added by freebsd-wip-checkout
VALID_CATEGORIES+=wip
# End addition

EOM
fi

installed_version=$(pkg query '%v' wip-tools)
ports_version=$(auto-print-make-variable wip/wip-tools PKGVERSION)
if [ $ports_version != $installed_version ]; then
    reason=$(echo $line | awk '{ print $2 }')
    printf "Installed: $installed_version\n"
    printf "Ports:     $ports_version\n"
    cd $wip_ports_dir/wip-tools
    make -DBATCH deinstall distclean reinstall
    make distclean
    
    cat << EOM

*********************************************************
You can now install any of the ports added above using:

cd $wip_ports_dir/<portname>
make install
*********************************************************
EOM
else
    printf "Latest version of wip-tools is already installed.\n"
fi


