#!/bin/sh -e

##########################################################################
#   Script description:
#       Import a package from wip to the ports tree
#       
#   History:
#   Date        Name        Modification
#   2018-04-17  Charlie &   Begin
##########################################################################

usage()
{
    printf "Usage: $0 port category\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Main
##########################################################################

if [ $# != 2 ]; then
    usage
fi

PORTSDIR=${PORTSDIR:-/usr/ports}
EDITOR=${EDITOR:-vi}

port=$1
category=$2

port=`echo $port | sed -e 's|/$||'`

if fgrep '$FreeBSD' $PORTSDIR/wip/$port/Makefile | grep -v '^CATEGORIES'; then
    printf "$port contains \$FreeBSD\$ tag.  Please fix and try again.\n"
    exit 1
fi

read -p "OK to update ports trees? y/[n] " update_ports
if [ 0$"update_ports" = 0y ]; then
    save_cwd=$(pwd)
    cd $PORTSDIR
    git pull
    cd wip
    git pull
    cd $save_pwd
else
    exit
fi

if [ -e $PORTSDIR/$category/$port ]; then
    if ! diff $PORTSDIR/$category/$port/Makefile $PORTSDIR/wip/$port/Makefile \
	| egrep 'PORTVERSION|DISTVERSION|PORTREVISION'; then
	read -p "No change to PORTVERSION or PORTREVISION.  OK to proceed? y/[n] " proceed
	if [ 0"$proceed" != 0y ]; then
	    exit
	fi
    fi

    printf "$PORTSDIR/$category/$port already exists.  Overwrite? y/[n] "
    read overwrite
    if [ 0$overwrite != 0y ]; then
	exit
    fi
fi

# Make sure we're adding to a fully updated tree
cd $PORTSDIR
git pull

cd $PORTSDIR/wip/$port
make clean

rsync -av --delete $PORTSDIR/wip/$port $PORTSDIR/$category

sed -i '' '/^CATEGORIES/s|wip ||' $PORTSDIR/$category/$port/Makefile

cd $PORTSDIR/$category/$port

if grep -w wip Makefile | grep -v '^CATEGORIES'; then
    printf "$port contains references to wip.  Please fix and try again.\n"
    pause
fi

make makesum    # GO ports change distname with category
for file in Makefile pkg-descr; do
    $EDITOR $file
done
if ! which port-check; then
    wip-reinstall-port -u -r port-dev
fi
port-check

# If user chose to overwrite, that means the port already existed and should
# be in category/Makefile already
cd $PORTSDIR/$category
git status
if [ 0$overwrite != 0y ]; then
    printf "Add port? y/[n] "
    read add
    if [ 0$add = 0y ]; then
	git add $port
	printf "Add $port to $category/Makefile.\n"
	pause
	$EDITOR Makefile
    fi
fi
