#!/bin/csh

set echo_style = both

# Remove old trees first
which remove-jb-ports >& /dev/null
if ( $status == 0 ) then
    remove-jb-ports
endif

switch(`uname`)
case    'FreeBSD':
    if ( ! -e /usr/ports ) then
	printf "No ports tree.\n"
	exit 1
    endif

    set jb_ports_dir = '/usr/jb-ports'
    
    # Some older fetch commands don't work well, so use wget if available
    set fetch_cmd = fetch

    cd /tmp
    echo "Fetching new frameworks..."
    set archive = FreeBSD-Ports-JB.tgz
    rm -f ${archive}*
    ${fetch_cmd} http://personalpages.tds.net/~jwbacon/Ports/FreeBSD/${archive}
    ${fetch_cmd} http://personalpages.tds.net/~jwbacon/Ports/FreeBSD/${archive}.md5
    ${fetch_cmd} http://personalpages.tds.net/~jwbacon/Ports/FreeBSD/${archive}.sha256
    if ( `md5 ${archive}` != `cat ${archive}.md5` ) then
	echo "Error: MD5 checksum mismatch!"
	exit 1
    else
	echo "MD5 checksums OK."
    endif
    
    which sha256 >& /dev/null
    if ( $status == 0 ) then
	if ( `sha256 ${archive}` != `cat ${archive}.sha256` ) then
	    echo "Error: SHA256 checksum mismatch!"
	    exit 1
	else
	    echo "SHA256 checksums OK."
	endif
    else
	echo 'Sha is not installed.  For improved security, considering'
	echo 'installing /usr/ports/sysutils/freebsd-sha256.'
	echo 'Press return to continue...'
	$<
    endif

    mkdir -p ${jb_ports_dir}
    cd ${jb_ports_dir}
    
    echo 'Generating new list file...'
    tar ztf /tmp/${archive} | awk -F '/' 'NF == 3 && $3 == "" { print $0 }'
    
    echo 'Installing new frameworks...'
    tar zxf /tmp/${archive}
    rm -f /tmp/${archive}
    
    # Install update-jb-ports port
    cd ${jb_ports_dir}/ports-mgmt/update-jb-ports
    make deinstall distclean reinstall

    echo ''
    echo '*******************************************************'
    echo 'You can now install any of the ports added above using:'
    echo ''
    echo "  cd ${jb_ports_dir}/<category>/<portname>"
    echo '  make install'
    breaksw

case    'Darwin':
    if ( ! -e /opt/local ) then
	echo "===================================================================="
	echo "You don't seem to have MacPorts installed.  You must first download"
	echo "and install the MacPorts base from http://www.macports.org, and then"
	echo "run this script again."
	echo "===================================================================="
	exit 1
    endif
    
    # Fetch new
    cd /tmp
    set archive = MacPorts-JB.tgz
    echo "Fetching new frameworks..."
    curl -s http://personalpages.tds.net/~jwbacon/Ports/Mac/${archive} > ${archive}
    curl -s http://personalpages.tds.net/~jwbacon/Ports/Mac/${archive}.md5 > ${archive}.md5
    if ( `md5 ${archive}` != `cat ${archive}.md5` ) then
	echo "Error: MD5 checksum mismatch!"
	exit 1
    else
	echo "MD5 checksums OK."
    endif
    
    echo 'Unpacking...'
    cd /opt/local
    tar zxf /tmp/${archive}
    rm -f /tmp/${archive}
    
    if ( -e /opt/local/etc/ports ) then
	set source_conf = /opt/local/etc/ports/sources.conf
    else
	set source_conf = /opt/local/etc/macports/sources.conf
    endif
    grep -q '/opt/local/MacPorts-JB' ${source_conf}
    if ( $status != 0 ) then
	echo 'file:///opt/local/MacPorts-JB' >> $source_conf
    endif
    cd /opt/local/MacPorts-JB
    portindex
    
    port uninstall update-jb-ports
    port clean --all update-jb-ports
    port install update-jb-ports
    
    echo ''
    echo '*******************************************************'
    echo 'You can now install any of the ports added above using:'
    echo ''
    echo '  sudo nice port install <portname>.\n'
    breaksw

default:
    echo "$0 : Error: Unknown OS: `uname`"
    exit 1

endsw

echo '*******************************************************'
echo 'You can remove all traces of jb-ports using:'
echo '  remove-jb-ports'
echo '*******************************************************'
echo ''

